<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[耗子的鸡窝]]></title>
  <subtitle><![CDATA[on the way]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-03-14T23:45:41.472Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[stanleyYu]]></name>
    <email><![CDATA[haoji.yu@dianping.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[spring-aop 拦截策略问题]]></title>
    <link href="http://yoursite.com/2016/03/10/spring-aop-feature/"/>
    <id>http://yoursite.com/2016/03/10/spring-aop-feature/</id>
    <published>2016-03-10T12:34:44.000Z</published>
    <updated>2016-03-14T13:02:43.000Z</updated>
    <content type="html"><![CDATA[<p>之前项目中有用到spring aop来做一些小的日志记录工具，但是在开发过程中发现一部分接口始终无法拦截，查了资料之后才发现是自己之前对spring aop的了解太过浅薄，因此总结一下以便以后回顾</p>
<a id="more"></a>

<h2 id="问题现象复现">问题现象复现</h2>
<p>在测试项目中添加测试用的接口、实现、以及相应拦截的aspect:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestInterface</span> </span>{</div><div class="line"></div><div class="line">    <span class="keyword">void</span> foo();</div><div class="line"></div><div class="line">    <span class="keyword">void</span> bar();</div><div class="line"></div><div class="line">}</div><div class="line"></div><div class="line"><span class="annotation">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInnerCall</span> <span class="keyword">implements</span> <span class="title">TestInterface</span> </span>{</div><div class="line"></div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">foo</span>() {</div><div class="line">        System.out.println(<span class="string">"at foo"</span>);</div><div class="line">        bar();</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="annotation">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bar</span>() {</div><div class="line">        System.out.println(<span class="string">"at bar"</span>);</div><div class="line">    }</div><div class="line"></div><div class="line">}</div><div class="line"></div><div class="line"><span class="annotation">@Component</span></div><div class="line"><span class="annotation">@Aspect</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAspect</span> </span>{</div><div class="line"></div><div class="line">    <span class="annotation">@Pointcut</span>(<span class="string">"execution(* com.dianping.mobile.checkinapi.test.TestInterface.*(..))"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointCut</span>() {</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="annotation">@Before</span>(value = <span class="string">"pointCut()"</span>)</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logBefore</span>(JoinPoint joinPoint) {</div><div class="line">        String methodName = joinPoint.getSignature().getName();</div><div class="line">        System.out.println();</div><div class="line">        System.out.println(<span class="string">"Before method "</span> + methodName);</div><div class="line">    }</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>

<p>同时添加测试用例代码，执行<em>foo</em>方法：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AopTest</span> <span class="keyword">extends</span> <span class="title">BaseTest</span> </span>{</div><div class="line"></div><div class="line">    <span class="annotation">@Autowired</span></div><div class="line">    <span class="keyword">private</span> TestInterface testInnerCall;</div><div class="line"></div><div class="line">    <span class="annotation">@Test</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test_innercall</span>() {</div><div class="line">        testInnerCall.foo();</div><div class="line">    }</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>

<p>原本预期执行过程中foo方法被拦截，并执行aspect中的代码，输出</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="type">Before</span> <span class="keyword">method</span> foo</div><div class="line">at foo</div><div class="line"><span class="type">Before</span> <span class="keyword">method</span> bar</div><div class="line">at bar</div></pre></td></tr></table></figure>

<p>但实际上输出的是</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="type">Before</span> <span class="keyword">method</span> foo</div><div class="line">at foo</div><div class="line">at bar</div></pre></td></tr></table></figure>

<p>也就是说foo方法内部对bar的调用并没有被spring-aop拦截到,同理一个子类对象调用父类方法时也会出现这种情况<br>晚上查了一下，发现<a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/aop.html" target="_blank" rel="external">spring官方文档</a>中其实就有对这种情况的详细解释</p>
<p><div align="center"><br><img src="http://7pn58h.com1.z0.glb.clouddn.com/spring-aop-QQ20160314-0%402x.png" width="100%" height="100%"></div><br>如上图所示，spring-aop实现的基本原理其实是基于代理的，对于需要增强的类而言，spring通过java代理或是CGLIB的方式生成增强后的对象，所有外部的访问都通过代理对象执行。但是在代理对象内部访问其他内部方法时，其实还是调用的内部对象的方法执行的，因此这些方法实际上并没有被增强</p>
<p>但是spring其实提供了在内部调用中获取当前代理对象的方法，只需要将方法的调用改造一下即可</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">foo</span>() {</div><div class="line">    System.<span class="keyword">out</span>.println(<span class="string">"at foo"</span>);</div><div class="line">    <span class="keyword">this</span>.bar();</div><div class="line">    ((TestInterface) AopContext.currentProxy()).bar();</div><div class="line">}</div></pre></td></tr></table></figure>

<p>同时添加配置：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">aop:aspectj-autoproxy</span> <span class="attribute">expose-proxy</span>=<span class="value">"true"</span>/&gt;</span></div></pre></td></tr></table></figure>

<p>实现原理既spring可以通过配置将当前使用的代理对象存储在Appcontext的threadlocal变量中，需要时取出使用即可<br>但是，可以很明显的看出来，如果使用这种方式的话，aop对业务代码会有极大的侵入，这通常与我们使用AOP的目标是相违背的，因此spring官网也很不推荐使用这种方式<br>除此之外，通过aspectj在编译期生成真正的增强类应该也可以解决这个问题，以后有时间的话可以试一下</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前项目中有用到spring aop来做一些小的日志记录工具，但是在开发过程中发现一部分接口始终无法拦截，查了资料之后才发现是自己之前对spring aop的了解太过浅薄，因此总结一下以便以后回顾</p>
]]>
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="spring" scheme="http://yoursite.com/tags/spring/"/>
    
      <category term="program" scheme="http://yoursite.com/categories/program/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS AutoLayout 实践 - view Hidden后的自动调整]]></title>
    <link href="http://yoursite.com/2015/05/10/ios-autolayout-view-hidden/"/>
    <id>http://yoursite.com/2015/05/10/ios-autolayout-view-hidden/</id>
    <published>2015-05-10T11:02:06.000Z</published>
    <updated>2015-05-10T12:17:00.000Z</updated>
    <content type="html"><![CDATA[<p>公司的app在前段时间终于开始不支持iOS5之后，Autolayout的学习也就再没有任何障碍了，这段时间可能会陆续在项目中开始使用Autolayout，后续遇到的坑应该也会持续更新在这里，做个记录</p>
<a id="more"></a>

<p>由于目前的项目中经常出现一个view内部各种不同的subview会依据数据来源的不同或是其他的情况而进行部分隐藏，如下图所示：</p>
<div align="center"><br><img src="http://yhjblog.qiniudn.com/20150510QQ20150510-1@2x.png" width="20%" height="20%"></div>

<p>假设中间红色的viewMiddle在一定情况下不会显示，需要蓝色的view向上补充位置，垂直方向上的约束为：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">self.viewDic = NSDictionaryOfVariableBindings(_button,_viewTopLeft,_viewTopRight,_viewMiddle,_viewBottom);</div><div class="line">NSArray *topLeftVFL1 = [NSLayoutConstraint constraintsWithVisualForma<span class="variable">t:</span>@<span class="string">"V:|-20-[_viewTopLeft(==_viewBottom)]-20-[_viewMiddle(==_viewBottom)]-20-[_viewBottom]-20-|"</span></div><div class="line">                                                                  option<span class="variable">s:NSLayoutFormatDirectionLeadingToTrailing</span></div><div class="line">                                                                  metric<span class="variable">s:nil</span></div><div class="line">                                                                    <span class="keyword">view</span><span class="variable">s:self</span>.viewDic];</div><div class="line">[self.<span class="keyword">view</span> addConstraint<span class="variable">s:topLeftVFL1</span>];</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">NSArray *topRightVFL1 = [NSLayoutConstraint constraintsWithVisualForma<span class="variable">t:</span>@<span class="string">"V:|-20-[_viewTopRight(==_viewBottom)]-20-[_viewMiddle(==_viewBottom)]-20-[_viewBottom]-20-|"</span></div><div class="line">                                                                option<span class="variable">s:NSLayoutFormatDirectionLeadingToTrailing</span></div><div class="line">                                                                metric<span class="variable">s:nil</span></div><div class="line">                                                                  <span class="keyword">view</span><span class="variable">s:self</span>.viewDic];</div><div class="line"></div><div class="line">[self.<span class="keyword">view</span> addConstraint<span class="variable">s:topRightVFL1</span>];</div></pre></td></tr></table></figure>



<p>当我们直接设置<code>self.viewMiddle.hidden=YES</code>时，会出现下图结果：</p>
<div align="center"><br><img src="http://yhjblog.qiniudn.com/20150510QQ20150510-2@2x.png" width="20%" height="20%"></div>

<p>从上图可以看到，红色的middleView即使被hidden了，也依然参与了Autolayout的过程，并有占位</p>
<p>在网上查了一段时间之后，发现stackoverflow上<a href="http://stackoverflow.com/questions/18065938/how-to-use-auto-layout-to-move-other-views-when-a-view-is-hidden" target="_blank" rel="external">这篇文章</a>讨论了几种实现这种需求的方式</p>
<h3 id="1-直接移除相关的view">1.直接移除相关的view</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">[self.viewMiddle removeFromSuperview]</span><span class="comment">;</span></div></pre></td></tr></table></figure>

<p>在一个view从其superview被移除之后，其所有相关的constraint都会被移除，此时，再对其上下的view添加需要的约束即可。<br>但是使用这种方式的话，再次viewMiddle时还是需要其进行addsubview，并将其原有的所有约束全部重新添加，在代码上还是相当麻烦的</p>
<h3 id="2-通过调节viewMiddle_height的约束来控制其隐藏与否">2.通过调节viewMiddle height的约束来控制其隐藏与否</h3>
<p>对viewMiddle设置height的约束，当其需要隐藏时，将height设置为0。但是这种方法的缺陷是可能出现这样的情况，viewMiddle与viewTop间有间距gap，viewMiddle与viewBottom间也有间距gap，此时若将viewMiddle的height设为0，viewBottom与viewTop之间的间距就会变成2*gap。最终还是需要调整相关的约束</p>
<h3 id="3-动态设置不同情况下不同约束的优先级">3.动态设置不同情况下不同约束的优先级</h3>
<p>为相关的view准备另一套viewMiddle隐藏时的布局约束,并为其设置较低的优先级：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="type">NSArray</span> *topLeftVFL2 = [<span class="type">NSLayoutConstraint</span> constraintsWithVisualFormat:@<span class="string">"V:|-20-[_viewTopLeft(==_viewBottom)]-20-[_viewBottom]-20-|"</span></div><div class="line">                                                              options:<span class="type">NSLayoutFormatDirectionLeadingToTrailing</span></div><div class="line">                                                              metrics:<span class="built_in">nil</span></div><div class="line">                                                                views:<span class="keyword">self</span>.viewDic];</div><div class="line"></div><div class="line">[topLeftVFL2 <span class="class"><span class="keyword">enum</span><span class="title">erateObjectsUsingBlock</span>:^(<span class="title">NSLayoutConstraint</span>* <span class="title">constraint</span>, <span class="title">NSUInteger</span> <span class="title">idx</span>, <span class="title">BOOL</span> *<span class="title">stop</span>) </span>{</div><div class="line">    constraint.priority = <span class="type">UILayoutPriorityFittingSizeLevel</span>;</div><div class="line">}];</div><div class="line"></div><div class="line"><span class="keyword">self</span>.topLeftArray2 = topLeftVFL2;</div><div class="line">[<span class="keyword">self</span>.view addConstraints:topLeftVFL2];</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="type">NSArray</span> *topRightVFL2 = [<span class="type">NSLayoutConstraint</span> constraintsWithVisualFormat:@<span class="string">"V:|-20-[_viewTopRight(==_viewBottom)]-20-[_viewBottom]-20-|"</span></div><div class="line">                                                                options:<span class="type">NSLayoutFormatDirectionLeadingToTrailing</span></div><div class="line">                                                                metrics:<span class="built_in">nil</span></div><div class="line">                                                                  views:<span class="keyword">self</span>.viewDic];</div><div class="line"></div><div class="line">[topRightVFL2 <span class="class"><span class="keyword">enum</span><span class="title">erateObjectsUsingBlock</span>:^(<span class="title">NSLayoutConstraint</span>* <span class="title">constraint</span>, <span class="title">NSUInteger</span> <span class="title">idx</span>, <span class="title">BOOL</span> *<span class="title">stop</span>) </span>{</div><div class="line">    constraint.priority = <span class="type">UILayoutPriorityFittingSizeLevel</span>;</div><div class="line">}];</div><div class="line"></div><div class="line"><span class="keyword">self</span>.topRightArray2 = topRightVFL2;</div><div class="line"></div><div class="line">[<span class="keyword">self</span>.view addConstraints:topRightVFL2];</div></pre></td></tr></table></figure>

<p>在viewMiddle被隐藏时，相应地调整这套约束的优先级，将不包含viewMiddle的约束优先级调高，将原有的约束优先级调低即可</p>
<h2 id="总结">总结</h2>
<p>总的来说，autolayout还是很强大的，优先级的配置也足够灵活，但不清楚在runtime的情况下调整constraint的优先级是否会有效率上的问题，这个还有待观察。在view hidden后其他约束自动更新的功能实现后，接下来就准备结合RAC，通过mvvm的方式动态地调整view的显示和layout，下周再写这部分~ ：）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>公司的app在前段时间终于开始不支持iOS5之后，Autolayout的学习也就再没有任何障碍了，这段时间可能会陆续在项目中开始使用Autolayout，后续遇到的坑应该也会持续更新在这里，做个记录</p>
]]>
    
    </summary>
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
      <category term="autolayout" scheme="http://yoursite.com/tags/autolayout/"/>
    
      <category term="program" scheme="http://yoursite.com/categories/program/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[objective-c rac 学习：map与flattenMap]]></title>
    <link href="http://yoursite.com/2014/10/22/oc-rac-map/"/>
    <id>http://yoursite.com/2014/10/22/oc-rac-map/</id>
    <published>2014-10-22T03:15:21.000Z</published>
    <updated>2014-10-22T07:11:16.000Z</updated>
    <content type="html"><![CDATA[<p>这两天依照<a href="http://www.raywenderlich.com/62699/reactivecocoa-tutorial-pt1" target="_blank" rel="external">这篇文章</a>学习了一下RAC相关的概念，先写一篇总结一下map和flattenmap相关的内容，后面对RAC有整体性的了解之后再尝试补充一些基础的关于<em>RACSignal</em>的用法</p>
<h2 id="map的用途">map的用途</h2>
<p>之前提到的教程中主要用于对信号输出值的转换：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">RACSignal *validUsernameSignal = [<span class="keyword">self</span><span class="variable">.usernameTextField</span><span class="variable">.rac_textSignal</span> map:^<span class="keyword">id</span>(<span class="built_in">NSString</span> *text){</div><div class="line">    <span class="keyword">return</span> @([<span class="keyword">self</span> isValidUsername:text]);</div><div class="line">}];</div></pre></td></tr></table></figure>

<p>上面的代码通过rac对<code>UITextField</code>做的扩充，使用<code>rac_textSignal</code>来创建<code>RACSignal</code>，之后通过<strong>map</strong>将输入值从text转换为bool</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">RAC(<span class="keyword">self</span><span class="variable">.usernameTextField</span>,backgroundColor) = [validUsernameSignal map:^<span class="keyword">id</span>(<span class="built_in">NSNumber</span> *userNameValid){</div><div class="line">    <span class="keyword">return</span> [userNameValid boolValue] ? [<span class="built_in">UIColor</span> clearColor]:[<span class="built_in">UIColor</span> yellowColor];</div><div class="line">}];</div></pre></td></tr></table></figure>

<p>这段代码通过map将bool值进一步转换为<code>UIColor</code></p>
<a id="more"></a>

<p>下面是map方法的文档解释</p>
<blockquote>
<p>Maps <code>block</code> across the values in the receiver.<br>This corresponds to the <code>Select</code> method in Rx.<br>Returns a new stream with the mapped values.</p>
</blockquote>
<p>可以看到主要是将接受到的值转换为对应的数据流继续传输</p>
<p>但是如果此时，map转换后返回的不是一般的值，而是另一个<code>RACSignal</code>时，这个函数就没法正确地运行了,例如下面的代码:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[[[<span class="keyword">self</span><span class="variable">.signInButton</span> rac_signalForControlEvents:UIControlEventTouchUpInside] map:^<span class="keyword">id</span>(<span class="keyword">id</span> value) {</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> signInSignal];</div><div class="line">}] subscribeNext:^(<span class="keyword">id</span> x) {</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"SIGN IN RESULT %@"</span>,x);</div><div class="line">}];</div></pre></td></tr></table></figure>

<p><code>signInSignal</code>方法返回一个<code>RACSignal</code>，而在这个信号的内部则返回bool型的值，我们原本的预期是希望能在打出来的日志中看到bool值，但实际情况确实如下所示：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt">2014-10-22 14:29:51.036 RWReactivePlayground[18653:1997732] SIGN IN RESULT &lt;RACDynamicSignal: 0x7faddbe15690&gt;</span> <span class="symbol">name:</span> +<span class="symbol">createSignal:</span></span></div></pre></td></tr></table></figure>

<p>也就是说外层订阅者在消费时，无法解析内层的信号，这种情况可以通过在外层消费代码中添加消费内层信号的代码来解决，但是这种嵌套的方式不是太优雅</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[[[<span class="keyword">self</span><span class="variable">.signInButton</span> rac_signalForControlEvents:UIControlEventTouchUpInside] map:^<span class="keyword">id</span>(<span class="keyword">id</span> value) {</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> signInSignal];</div><div class="line">}] subscribeNext:^(<span class="keyword">id</span> x) {</div><div class="line">    [x subscribeNext:^(<span class="keyword">id</span> x) {</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"SIGN IN RESULT %@"</span>,x);</div><div class="line">    }];</div><div class="line">}];</div></pre></td></tr></table></figure>

<p>那篇文章中就给出了另一种解决方案，也就是使用<code>flattenMap</code>:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[[[<span class="keyword">self</span><span class="variable">.signInButton</span> rac_signalForControlEvents:UIControlEventTouchUpInside] flattenMap:^<span class="keyword">id</span>(<span class="keyword">id</span> value) {</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> signInSignal];</div><div class="line">}] subscribeNext:^(<span class="keyword">id</span> x) {</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"SIGN IN RESULT %@"</span>,x);</div><div class="line">}];</div></pre></td></tr></table></figure>

<p>根据文档，<code>flattenMap</code>主要的block主要用于返回一个新的<code>RACSignal</code>类，在这个例子中也可以说是将内部信号暴露给外部:</p>
<blockquote>
<p>block - A block which accepts the values in the receiver and returns a new instance of the receiver’s class. This block should not return <code>nil</code>.</p>
</blockquote>
<p>最终的结果将是依据block返回的信号，形成新的数据流，即将嵌套在内部的信号暴露在外部，此时运行结果为：</p>
<blockquote>
<p>2014-10-22 14:47:52.082 RWReactivePlayground[18760:2005063] SIGN IN RESULT 0</p>
</blockquote>
<p>即我们预期的bool型的结果</p>
<h2 id="总结">总结</h2>
<p>信号嵌套的方式在实际开发过程时常可能遇到，如果通过在外层信号消费代码内消费内层信号的话，会使代码混乱而无法阅读。相较之下，flattenMap就是一个比较优雅的方式，通过一个block来组织最外层希望获得的信号形式，多层信号嵌套时也更易于代码阅读</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这两天依照<a href="http://www.raywenderlich.com/62699/reactivecocoa-tutorial-pt1" target="_blank" rel="external">这篇文章</a>学习了一下RAC相关的概念，先写一篇总结一下map和flattenmap相关的内容，后面对RAC有整体性的了解之后再尝试补充一些基础的关于<em>RACSignal</em>的用法</p>
<h2 id="map的用途">map的用途</h2>
<p>之前提到的教程中主要用于对信号输出值的转换：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">RACSignal *validUsernameSignal = [<span class="keyword">self</span><span class="variable">.usernameTextField</span><span class="variable">.rac_textSignal</span> map:^<span class="keyword">id</span>(<span class="built_in">NSString</span> *text){</div><div class="line">    <span class="keyword">return</span> @([<span class="keyword">self</span> isValidUsername:text]);</div><div class="line">}];</div></pre></td></tr></table></figure>

<p>上面的代码通过rac对<code>UITextField</code>做的扩充，使用<code>rac_textSignal</code>来创建<code>RACSignal</code>，之后通过<strong>map</strong>将输入值从text转换为bool</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">RAC(<span class="keyword">self</span><span class="variable">.usernameTextField</span>,backgroundColor) = [validUsernameSignal map:^<span class="keyword">id</span>(<span class="built_in">NSNumber</span> *userNameValid){</div><div class="line">    <span class="keyword">return</span> [userNameValid boolValue] ? [<span class="built_in">UIColor</span> clearColor]:[<span class="built_in">UIColor</span> yellowColor];</div><div class="line">}];</div></pre></td></tr></table></figure>

<p>这段代码通过map将bool值进一步转换为<code>UIColor</code></p>
]]>
    
    </summary>
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
      <category term="rac" scheme="http://yoursite.com/tags/rac/"/>
    
      <category term="program" scheme="http://yoursite.com/categories/program/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2014/09/30/hello-world/"/>
    <id>http://yoursite.com/2014/09/30/hello-world/</id>
    <published>2014-09-30T03:36:29.000Z</published>
    <updated>2014-09-30T03:36:28.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<a id="more"></a>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

]]>
    
    </summary>
    
  </entry>
  
</feed>
